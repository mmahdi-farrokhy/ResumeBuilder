package com.mmf.resumeBuilder.enums.education;

public enum Major {
    NONE,
    ELECTRICAL_ENGINEERING,
    COMPUTER_ENGINEERING,
    MECHANICAL_ENGINEERING,
    CIVIL_ENGINEERING,
    ARCHITECTURE,
    MARINE_ENGINEERING,
    AEROSPACE_ENGINEERING,
    ENERGY_ENGINEERING,
    URBAN_PLANNING,
    INFORMATION_TECHNOLOGY_ENGINEERING,
    INDUSTRIAL_ENGINEERING,
    BIOMEDICAL_ENGINEERING,
    TEXTILE_ENGINEERING,
    ROBOTICS_ENGINEERING,
    PETROLEUM_ENGINEERING,
    SAFETY_ENGINEERING,
    MINING_ENGINEERING,
    POLYMER_ENGINEERING,
    MATERIALS_ENGINEERING,
    PROJECT_MANAGEMENT_ENGINEERING,
    RAILWAY_ENGINEERING,
    AGRICULTURAL_ENGINEERING,
    ENGINEERING_SCIENCES,
    INTERIOR_ARCHITECTURE,
    TECHNICAL_MECHANICAL_ASSOCIATE,
    TECHNICAL_CIVIL_ASSOCIATE,
    TECHNICAL_ELECTRICAL_ASSOCIATE,
    AVIATION_TECHNICIAN,
    TECHNICAL_MINING_ASSOCIATE,
    MECHATRONICS,
    COMPUTER_SCIENCE,
    CHEMISTRY,
    ACCOUNTING,
    PHYSICS,
    ENGINEERING_PHYSICS,
    MATHEMATICS_AND_ITS_APPLICATIONS,
    MULTIMEDIA_STUDIES,
    MECHANICAL_ENGINEERING_PART_TIME,
    TECHNICAL_INSPECTION_ENGINEERING,
    AGRICULTURAL_MACHINERY_ENGINEERING,
    AVIATION,
    EXECUTIVE_MANAGEMENT_ENGINEERING,
    MATERIALS_ENGINEERING_AND_FOOD_INDUSTRY_DESIGN,
    HELICOPTER_PILOTING,
    COMMAND_ENGINEERING_AND,
    OPTICS_AND_LASER_ENGINEERING,
    MEDICAL,
    DENTISTRY,
    PHARMACY,
    BIOTECHNOLOGY,
    VETERINARY_MEDICINE,
    BIOLOGY,
    PHYSIOTHERAPY,
    ARTIFICIAL_ORGANS,
    FOOD_HYGIENE,
    MARITIME_MANAGEMENT_AND_COMMISSIONER,
    DENTAL_PROSTHETICS_TECHNICIAN,
    RANGE_AND_WATERSHED_TECHNOLOGY,
    ERGONOMICS,
    OPERATING_ROOM,
    INTELLIGENCE,
    VISIONOMETRY,
    AUDIOLOGY,
    LABORATORY_SCIENCES,
    VETERINARY_LABORATORY_SCIENCES,
    MIDWIFERY,
    NUTRITION_SCIENCES,
    FOOD_SCIENCE_AND_INDUSTRIES,
    ENVIRONMENTAL_HEALTH_ENGINEERING,
    GREEN_SPACE_ENGINEERING,
    HEALTH_BACHELOR,
    GENERAL,
    NATURAL_RESOURCES_ENGINEERING,
    VETERINARY_TECHNICIAN,
    NURSING,
    MEDICAL_DOCUMENTS,
    CELLULAR_BIOLOGY,
    PROFESSIONAL_HEALTH_ENGINEERING,
    PLANT_PRODUCTION_ENGINEERING,
    HEALTH_INFORMATION_TECHNOLOGY,
    ENVIRONMENTAL_ENGINEERING_SCIENCES,
    CHEMISTRY_TEACHING,
    SPEECH_THERAPY,
    PRODUCTION_TECHNOLOGIES,
    MEDICAL_URGENCIES,
    FISHERIES,
    AGRICULTURE_AND_PLANT_BREEDING,
    ANIMAL_SCIENCES,
    VETERINARY,
    OCEANOGRAPHY,
    GEOLOGY,
    OCCUPATIONAL_THERAPY,
    RADIOLOGY,
    IMMUNOLOGY,
    NUCLEAR_MEDICINE,
    AGRICULTURAL_EXTENSION_AND_EDUCATION,
    WOOD_ENGINEERING,
    FORESTRY,
    BIOLOGICAL_DEFENSE,
    BEEKEEPING,
    PLANT_BREEDING,
    LAW,
    MASTER_OF_THEOLOGY,
    COMMUNICATION_STUDIES,
    ECONOMICS,
    MANAGEMENT,
    POLITICAL_SCIENCES,
    JUDICIARY,
    PHYSICAL_EDUCATION,
    INTERPRETATION_OF_THE_HOLY_QURAN,
    PSYCHOLOGY,
    PERSIAN_LANGUAGE_AND_LITERATURE,
    ARABIC_LANGUAGE_AND_LITERATURE,
    PUBLIC_RELATIONS,
    FAMILY_STUDIES,
    LIBRARY_AND_INFORMATION_SCIENCE,
    SOCIAL_WORK,
    GUIDANCE_AND_COUNSELING,
    STORY_LITERATURE,
    GEOMORPHOLOGY,
    GEOGRAPHY,
    HOTEL_MANAGEMENT,
    EDUCATIONAL_SCIENCES,
    TOURISM_MANAGEMENT,
    GEOGRAPHY_TEACHING,
    CUSTOMS_AFFAIRS,
    HISTORY,
    HADITH_SCIENCES,
    PHILOSOPHY,
    CHILD_DEVELOPMENT_IN_PRESCHOOL,
    TEACHING_PERSIAN_LANGUAGE_AND_LITERATURE,
    ARABIC_TEACHING,
    MANAGEMENT_MARITIME_BUSINESS,
    SOCIAL_COMMUNICATION_SCIENCES,
    THEOLOGY_AND_ISLAMIC_TEACHINGS,
    CINEMA,
    PHOTOGRAPHY,
    PRINTING,
    BACHELOR_OF_CARPET,
    GRAPHIC_DESIGN,
    HANDICRAFTS,
    MUSEOLOGY,
    ARCHAEOLOGY,
    HISTORICAL_PRESERVATION,
    TELEVISION_AND_DIGITAL_ARTS,
    ENGLISH_LANGUAGE,
    FRENCH_LANGUAGE,
    RUSSIAN_LANGUAGE,
    CHINESE_LANGUAGE,
    GERMAN_LANGUAGE;

    @Override
    public String toString() {
        String standardValue = this.name().toLowerCase().replace("_", " ");
        StringBuilder uppercaseValue = new StringBuilder();
        for (String word : standardValue.split(" ")) {
            uppercaseValue.append(word.substring(0, 1).toUpperCase()).append(word.substring(1)).append(" ");
        }

        return uppercaseValue.toString().trim();
    }
}
